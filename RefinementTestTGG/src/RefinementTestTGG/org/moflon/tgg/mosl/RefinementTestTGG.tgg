#import "platform:/plugin/MocaTree/model/MocaTree.ecore"
#import "platform:/plugin/RefinementTestLanguage/model/RefinementTestLanguage.ecore"

#schema RefinementTestTGG

#source {
	MocaTree
}

#target {
	RefinementTestLanguage
}

#correspondence {
	FileToPseudoFile {
		#src->MocaTree.File
		#trg->RefinementTestLanguage.PseudoFile
	}
	NodeToPseudoNode {
		#src->MocaTree.Node
		#trg->RefinementTestLanguage.PseudoNode
	}
	FolderToPseudoFolder {
		#src->MocaTree.Folder
		#trg->RefinementTestLanguage.PseudoFolder
	}
}


#using RefinementTestTGG.*

#rule FileToPFileRule #with RefinementTestTGG

#source {
	folder:MocaTree.Folder {
		++ - file->file
	}
	++file:MocaTree.File
}

#target {
	pseudoFolder:RefinementTestLanguage.PseudoFolder {
		++ - pseudoFile->pseudoFile
	}
	++pseudoFile:RefinementTestLanguage.PseudoFile
}

#correspondence {
	++ fileToPseudoFile :FileToPseudoFile {
		#src->file
		#trg->pseudoFile
	}
	folderToPseudoFolder :FolderToPseudoFolder {
		#src->folder
		#trg->pseudoFolder
	}
}


#using RefinementTestTGG.*

#rule DeleteCorrRule #extends FileToPFileRule, FolderToPFolderRule , NodeToPNodeRule , AddCorrRule , CreateNodeRule #with RefinementTestTGG

#source {
	++node:MocaTree.Node
}

#target {
	++pseudoNode:RefinementTestLanguage.PseudoNode
}


#using RefinementTestTGG.*

#rule DeleteEdgeRule #extends FolderToPFolderRule, NodeToPNodeRule , FileToPFileRule , AddEdgeRule #with RefinementTestTGG

#target {
	pseudoFile:RefinementTestLanguage.PseudoFile
	++pseudoNode:RefinementTestLanguage.PseudoNode
}


#using RefinementTestTGG.*

#rule ReplaceNodeRule #extends FileToPFileRule, FolderToPFolderRule , NodeToPNodeRule #with RefinementTestTGG


#using RefinementTestTGG.*

#rule CreateNodeRule #extends FileToPFileRule, FolderToPFolderRule , NodeToPNodeRule #with RefinementTestTGG

#target {
	++pseudoNode2:RefinementTestLanguage.PseudoNode
	pseudoFile:RefinementTestLanguage.PseudoFile {
		++ - pseudoNode->pseudoNode2
	}
}


#using RefinementTestTGG.*

#rule ContextWinsRule #extends FolderToPFolderRule, NodeToPNodeRule , FileToPFileRule #with RefinementTestTGG


#using RefinementTestTGG.*

#rule NodeToPNodeRule #with RefinementTestTGG

#source {
	file:MocaTree.File
	++node:MocaTree.Node {
		++ - file->file
	}
	folder:MocaTree.Folder {
		- file->file
	}
}

#target {
	pseudoFolder:RefinementTestLanguage.PseudoFolder {
		- pseudoFile->pseudoFile
	}
	++pseudoNode:RefinementTestLanguage.PseudoNode
	pseudoFile:RefinementTestLanguage.PseudoFile {
		++ - pseudoNode->pseudoNode
	}
}

#correspondence {
	fileToPseudoFile :FileToPseudoFile {
		#src->file
		#trg->pseudoFile
	}
	++ nodeToPseudoNode :NodeToPseudoNode {
		#src->node
		#trg->pseudoNode
	}
	folderToPseudoFolder :FolderToPseudoFolder {
		#src->folder
		#trg->pseudoFolder
	}
}


#using RefinementTestTGG.*

#rule FolderToPFolderRule #with RefinementTestTGG

#source {
	++folder:MocaTree.Folder
}

#target {
	++pseudoFolder:RefinementTestLanguage.PseudoFolder
}

#correspondence {
	++ folderToPseudoFolder :FolderToPseudoFolder {
		#src->folder
		#trg->pseudoFolder
	}
}


#using RefinementTestTGG.*

#rule AddEdgeRule #extends FolderToPFolderRule, FileToPFileRule , NodeToPNodeRule #with RefinementTestTGG

#target {
	pseudoFolder:RefinementTestLanguage.PseudoFolder {
		++ - pseudoNode->pseudoNode
	}
	++pseudoNode:RefinementTestLanguage.PseudoNode
}


#using RefinementTestTGG.*

#rule AddCorrRule #extends FolderToPFolderRule, FileToPFileRule , NodeToPNodeRule , CreateNodeRule #with RefinementTestTGG

#source {
	++node:MocaTree.Node
}

#target {
	++pseudoNode2:RefinementTestLanguage.PseudoNode
}

#correspondence {
	++ node2ToPseudoNode :NodeToPseudoNode {
		#src->node
		#trg->pseudoNode2
	}
}


