#import "platform:/plugin/ClassDiagramModel/model/ClassDiagramModel.ecore"
#import "platform:/plugin/DocumentModel/model/DocumentModel.ecore"

#schema CDtoDocTGG

#source {
	ClassDiagramModel
}

#target {
	DocumentModel
}

#correspondence {
	Root {
		#src->ClassDiagramModel.ClassDiagram
		#trg->DocumentModel.Documentation
	}
	C2D {
		#src->ClassDiagramModel.Class
		#trg->DocumentModel.Doc
	}
}

#attributeConditions {
	eq(0: , 1: ) {
		#sync: BB, FB, BF
		#gen: FF, FB, BB, BF
	}
}


#using CDtoDocTGG.*

#rule ItoH_2 #complements ItoH_0#with CDtoDocTGG

#target {
	transSubD:DocumentModel.Doc {
		++ - allLinks->superD
		- allLinks->subD
	}
	subD:DocumentModel.Doc {
		++ - allLinks->superD
		++ - directLinks->superD
	}
	superD:DocumentModel.Doc
}


#using CDtoDocTGG.*

#rule CtoD #with CDtoDocTGG

#source {
	cd:ClassDiagramModel.ClassDiagram {
		++ - classes->c
	}
	++c:ClassDiagramModel.Class
}

#target {
	docs:DocumentModel.Documentation {
		++ - docs->d
	}
	++d:DocumentModel.Doc
}

#correspondence {
	++ c2d :C2D {
		#src->c
		#trg->d
	}
	root :Root {
		#src->cd
		#trg->docs
	}
}

#attributeConditions {
	eq (c.name, d.name)
}


#using CDtoDocTGG.*

#rule Axiom #with CDtoDocTGG

#source {
	++cd:ClassDiagramModel.ClassDiagram
}

#target {
	++documentation:DocumentModel.Documentation
}

#correspondence {
	++ cdToDocumentation :Root {
		#src->cd
		#trg->documentation
	}
}


#using CDtoDocTGG.*

#rule ItoH_0 #with CDtoDocTGG

#source {
	subC:ClassDiagramModel.Class {
		++ - super->superC
	}
	superC:ClassDiagramModel.Class
}

#target {
	superD:DocumentModel.Doc
	subD:DocumentModel.Doc {
		++ - directLinks->superD
		++ - allLinks->superD
	}
}

#correspondence {
	subC2D :C2D {
		#src->subC
		#trg->subD
	}
	superC2D :C2D {
		#src->superC
		#trg->superD
	}
}


#using CDtoDocTGG.*

#rule ItoH_1 #complements ItoH_0#with CDtoDocTGG

#target {
	superD:DocumentModel.Doc {
		- allLinks->transSuperD
	}
	subD:DocumentModel.Doc {
		++ - allLinks->transSuperD
		++ - directLinks->superD
		++ - allLinks->superD
	}
	transSuperD:DocumentModel.Doc
}


#using CDtoDocTGG.*

#rule ItoH_3 #complements ItoH_0#with CDtoDocTGG

#target {
	transSuperD:DocumentModel.Doc {
		- revAllLinks->superD
	}
	subD:DocumentModel.Doc {
		++ - allLinks->superD
		++ - directLinks->superD
	}
	superD:DocumentModel.Doc
	transSubD:DocumentModel.Doc {
		++ - allLinks->transSuperD
		- allLinks->subD
	}
}


