#import "platform:/plugin/LibraryLanguage/model/LibraryLanguage.ecore"
#import "platform:/plugin/BibliographyLanguage/model/BibliographyLanguage.ecore"

#schema LibraryToBibliographyIntegration

#source {
	LibraryLanguage
}

#target {
	BibliographyLanguage
}

#correspondence {
	AuthorToResearcher {
		#src->LibraryLanguage.Author
		#trg->BibliographyLanguage.Researcher
	}
	LibraryToBibliography {
		#src->LibraryLanguage.Library
		#trg->BibliographyLanguage.Bibliography
	}
	BookToPublication {
		#src->LibraryLanguage.Book
		#trg->BibliographyLanguage.Publication
	}
}

#attributeConditions {
	eq(1: , 0: ) {
		#sync: FB, BB, BF
		#gen: BF, FB, BB, FF
	}
}


#using LibraryToBibliographyIntegration.*

#rule RuleLibraryToBibliography #with LibraryToBibliographyIntegration

#source {
	++lib:LibraryLanguage.Library
}

#target {
	++biblio:BibliographyLanguage.Bibliography
}

#correspondence {
	++ libraryToBibliography :LibraryToBibliography {
		#src->lib
		#trg->biblio
	}
}

#attributeConditions {
	eq (lib.location, biblio.name)
}


#using LibraryToBibliographyIntegration.*

#rule RuleBookToPublication #with LibraryToBibliographyIntegration

#source {
	!existingBook:LibraryLanguage.Book {
		title == pub . citation
		- author->aut
	}
	++book:LibraryLanguage.Book {
		++ - author->aut
	}
	lib:LibraryLanguage.Library {
		- author->aut
		++ - item->book
	}
	aut:LibraryLanguage.Author
}

#target {
	++pub:BibliographyLanguage.Publication
	res:BibliographyLanguage.Researcher {
		++ - publication->pub
	}
}

#correspondence {
	++ bookToPublication :BookToPublication {
		#src->book
		#trg->pub
	}
	authorToResearcher :AuthorToResearcher {
		#src->aut
		#trg->res
	}
}

#attributeConditions {
	eq (book.title, pub.citation)
}


#using LibraryToBibliographyIntegration.*

#rule RuleConnectionBookToAuthor #with LibraryToBibliographyIntegration

#source {
	aut:LibraryLanguage.Author
	library:LibraryLanguage.Library {
		- author->aut
		- item->book
	}
	book:LibraryLanguage.Book {
		++ - author->aut
		! - author->aut
	}
}

#target {
	++pub:BibliographyLanguage.Publication
	res:BibliographyLanguage.Researcher {
		++ - publication->pub
	}
}

#correspondence {
	++ bookToPublication :BookToPublication {
		#src->book
		#trg->pub
	}
	authorToResearcher :AuthorToResearcher {
		#src->aut
		#trg->res
	}
}

#attributeConditions {
	eq (book.title, pub.citation)
}


#using LibraryToBibliographyIntegration.*

#rule RuleAuthorToResearcher #with LibraryToBibliographyIntegration

#source {
	lib:LibraryLanguage.Library {
		++ - author->aut
	}
	++aut:LibraryLanguage.Author
}

#target {
	bib:BibliographyLanguage.Bibliography {
		++ - researcher->res
	}
	++res:BibliographyLanguage.Researcher
}

#correspondence {
	libraryToBibliography :LibraryToBibliography {
		#src->lib
		#trg->bib
	}
	++ authorToResearcher :AuthorToResearcher {
		#src->aut
		#trg->res
	}
}

#attributeConditions {
	eq (aut.name, res.name)
}


