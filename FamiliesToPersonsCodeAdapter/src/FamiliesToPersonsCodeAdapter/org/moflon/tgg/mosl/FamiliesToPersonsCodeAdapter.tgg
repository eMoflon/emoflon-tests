#import "platform:/plugin/Families/model/Families.ecore"
#import "platform:/plugin/Persons/model/Persons.ecore"

#schema FamiliesToPersonsCodeAdapter

#source {
	Families
}

#target {
	Persons
}

#correspondence {
	FamilyToFather {
		#src->Families.Family
		#trg->Persons.Father
	}
	FamilyRegisterToPersonsRegister {
		#src->Families.FamilyRegister
		#trg->Persons.PersonsRegister
	}
	MemberToFather {
		#src->Families.Member
		#trg->Persons.Father
	}
	MemberToDaughter {
		#src->Families.Member
		#trg->Persons.Daughter
	}
	MemberToMother {
		#src->Families.Member
		#trg->Persons.Mother
	}
	FamilyToPerson {
		#src->Families.Family
		#trg->Persons.Person
	}
	MemberToSon {
		#src->Families.Member
		#trg->Persons.Son
	}
}

#attributeConditions {
	concat(2:EString, 1:EString, 0:EString, 3:EString) {
		#sync: BFBB, BBBF, BFFB, BBFB, BBBB
		#gen: BFFF, BBBF, BFBB, BBFB, BFFB, BBBB, BBFF, BFBF
	}
}


#using FamiliesToPersonsCodeAdapter.*

#rule MotherToMemberRule #with FamiliesToPersonsCodeAdapter

#source {
	family:Families.Family {
		++ - mother->member
		- mother->noMotherMember
	}
	familyRegister:Families.FamilyRegister {
		- families->family
	}
	!noMotherMember:Families.Member
	++member:Families.Member
}

#target {
	++mother:Persons.Mother
	personsRegister:Persons.PersonsRegister {
		- person->father
		++ - person->mother
	}
	father:Persons.Father
}

#correspondence {
	familyToFather :FamilyToFather {
		#src->family
		#trg->father
	}
	familyRegisterToPersonsRegister :FamilyRegisterToPersonsRegister {
		#src->familyRegister
		#trg->personsRegister
	}
	++ memberToMother :MemberToMother {
		#src->member
		#trg->mother
	}
}

#attributeConditions {
	concat (" ", member.firstName, family.lastName, mother.fullName)
}


#using FamiliesToPersonsCodeAdapter.*

#rule DaughterToMemberRule #with FamiliesToPersonsCodeAdapter

#source {
	++member:Families.Member
	family:Families.Family {
		++ - daughters->member
	}
	familyRegister:Families.FamilyRegister {
		- families->family
	}
}

#target {
	father:Persons.Father
	++daughter:Persons.Daughter
	personsRegister:Persons.PersonsRegister {
		++ - person->daughter
		- person->father
	}
}

#correspondence {
	familyToFather :FamilyToFather {
		#src->family
		#trg->father
	}
	familyRegisterToPersonsRegister :FamilyRegisterToPersonsRegister {
		#src->familyRegister
		#trg->personsRegister
	}
	++ memberToDaughter :MemberToDaughter {
		#src->member
		#trg->daughter
	}
}

#attributeConditions {
	concat (" ", member.firstName, family.lastName, daughter.fullName)
}


#using FamiliesToPersonsCodeAdapter.*

#rule FatherToMemberRule #with FamiliesToPersonsCodeAdapter

#source {
	familyRegister:Families.FamilyRegister {
		++ - families->family
	}
	++family:Families.Family {
		++ - father->member
	}
	++member:Families.Member
}

#target {
	++father:Persons.Father
	personsRegister:Persons.PersonsRegister {
		++ - person->father
	}
}

#correspondence {
	++ memberToFather :MemberToFather {
		#src->member
		#trg->father
	}
	familyRegisterToPersonsRegister :FamilyRegisterToPersonsRegister {
		#src->familyRegister
		#trg->personsRegister
	}
	++ familyToFather :FamilyToFather {
		#src->family
		#trg->father
	}
}

#attributeConditions {
	concat (" ", member.firstName, family.lastName, father.fullName)
}


#using FamiliesToPersonsCodeAdapter.*

#rule SonToMemberRule #with FamiliesToPersonsCodeAdapter

#source {
	family:Families.Family {
		++ - sons->member
	}
	familyRegister:Families.FamilyRegister {
		- families->family
	}
	++member:Families.Member
}

#target {
	++son:Persons.Son
	father:Persons.Father
	personsRegister:Persons.PersonsRegister {
		++ - person->son
		- person->father
	}
}

#correspondence {
	familyRegisterToPersonsRegister :FamilyRegisterToPersonsRegister {
		#src->familyRegister
		#trg->personsRegister
	}
	++ memberToSon :MemberToSon {
		#src->member
		#trg->son
	}
	familyToFather :FamilyToFather {
		#src->family
		#trg->father
	}
}

#attributeConditions {
	concat (" ", member.firstName, family.lastName, son.fullName)
}


#using FamiliesToPersonsCodeAdapter.*

#rule FamilyRegisterToPersonsRegisterRule #with FamiliesToPersonsCodeAdapter

#source {
	++familyRegister:Families.FamilyRegister
}

#target {
	++personsRegister:Persons.PersonsRegister
}

#correspondence {
	++ familyRegisterToPersonsRegister :FamilyRegisterToPersonsRegister {
		#src->familyRegister
		#trg->personsRegister
	}
}


